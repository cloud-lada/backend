name: go
on:
  push:
    paths:
      - '**.go'
      - '**.mod'
      - '**.sum'
    branches:
      - master
  pull_request:
    paths:
      - '**.go'
      - '**.mod'
      - '**.sum'

jobs:
  test:
    runs-on: ubuntu-20.04
    services:
      postgres:
        image: timescale/timescaledb:latest-pg14
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_PASSWORD: postgres
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.18.x'

      - name: Get cache paths
        id: cache
        run: |
          echo "::set-output name=build::$(go env GOCACHE)"
          echo "::set-output name=module::$(go env GOMODCACHE)"
      - name: Set up cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.cache.outputs.build }}
            ${{ steps.cache.outputs.module }}
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run tests
        run: go test -race ./...

  vet:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.18.x'

      - name: Get cache paths
        id: cache
        run: |
          echo "::set-output name=build::$(go env GOCACHE)"
          echo "::set-output name=module::$(go env GOMODCACHE)"
      - name: Set up cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.cache.outputs.build }}
            ${{ steps.cache.outputs.module }}
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Vet code
        run: go vet ./...
